base_params:  # nominal device definition; serves as the centre point for sweeps
  core:
    material: SiN  # waveguide core dispersion key (see data/materials)
    width_nm: 1200  # nominal core width [nm]
    height_nm: 400  # core thickness [nm]
  overlay:
    material: TiO2  # overlay material identifier
    thickness_nm: 50  # overlay thickness [nm]
    width_nm: 1200  # overlay lateral span [nm]
  nanowire:
    material: NbTiN  # lossy nanowire material
    width_nm: 80  # wire strip width [nm]
    thickness_nm: 7  # physical thickness [nm]
    pitch_nm: 160  # period of nanowire grating [nm]
    fill_factor: 0.5  # duty cycle = width/pitch (effective coverage)
    setback_nm: 5  # vertical gap between overlay and nanowire [nm]
  stack:
    substrate: SiO2  # semi-infinite substrate material
    bottom_cladding: SiO2  # bottom oxide material
    bottom_cladding_thickness_nm: 3000  # oxide buffer thickness [nm]
    top_cladding: SiO2  # top cladding material (use air or other as needed)
    top_cladding_thickness_nm: 2000  # top cladding thickness [nm]
  propagation_length_um: 50  # interaction length along propagation [µm]
  dual_pass:
    enable: true  # enables simple mirror-based dual-pass absorptance model
    scheme: top_mirror  # options: none | top_mirror | bottom_dbr | u_turn
    reflectivity: 0.6  # effective mirror reflectivity used in dual-pass model
    length_um: 50  # dual-pass path length [µm] (used for bookkeeping/reporting)
sweep:
  wavelengths_nm: [1530, 1550, 1570]  # trimmed grid; add more points once candidates look good
  sweep_space:  # parameter values to sweep (cartesian product)
    core.width_nm: [1150, 1250]  # example coarse grid around nominal width
    overlay.thickness_nm: [45, 55]  # overlay thickness sweep range
    nanowire.fill_factor: [0.45, 0.55]  # nanowire duty cycle sweep
  mean_threshold: 0.85  # minimum average absorptance target across band
  delta_db_limit: 1.0  # maximum |TE−TM| imbalance allowed [dB]
solver:
  backend: empy_fd  # options: empy_fd (FD solver), empy_native (EMpy), analytic
  target_modes: 2  # number of modes retained per wavelength
  options:
    num_modes: 2  # solve only the TE/TM fundamentals for speed
    which: LM  # focus on largest-|β| eigenvalues; add shift_sigma if convergence slows
mesh:
  dx_nm: 40  # lateral mesh step [nm]
  dz_nm: 20  # vertical mesh step [nm]
  lateral_span_nm: 3000  # total simulation width [nm]
  bottom_padding_nm: 1500  # extra substrate depth below stack [nm]
  top_padding_nm: 1500  # extra superstrate height above stack [nm]
